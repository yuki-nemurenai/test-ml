name: Ignoring Helper Deploy Staging
# ml-ignoring-helper
env: 
  ARTIFACT_NAME: com.verifika.service.ml.ignoring.helper
  DEPLOYMENT_NAME: ml-ignoring-helper
  CONTAINER_NAME: ml-ignoring-helper
  MANIFEST_DIR: "./ignoring-helper/k8s"
# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Specify the artifact to be deployed'
        options:
        - dev
        - staging
      promote:
        description: "Promote artifact from dev environment"
        type: boolean
        required: false
        default: 'true'
      version:
        description: 'Specify the version of the artifact to be deployed if artifact not promoted (ex. 1827)'
        required: false
        default: 'latest'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Get artifact version
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        mkdir $HOME/.kube
        echo "$KUBE_CONFIG" > $HOME/.kube/config
        kubectl get deploy $DEPLOYMENT_NAME -n dev -ojsonpath="{.spec.template.spec.containers[].image}" |sed 's/.*://' | sed 's/.*-//'
        if ${{ github.event.inputs.promote }} ;
        then
          echo "PROMOTE_VERSION=$(kubectl get deploy $DEPLOYMENT_NAME -n dev -ojsonpath="{.spec.template.spec.containers[].image}" |sed 's/.*://' | sed 's/.*-//')" >> $GITHUB_ENV
        else
          echo "PROMOTE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        fi
    - name: Deploy ${{ env.DEPLOYMENT_NAME }} service to ${{ github.event.inputs.environment }}
      run: |
        NAMESPACE=${{ github.event.inputs.environment }}
        if [[ "${{ github.event.inputs.environment }}" == "staging" ]] ;
        then
          kubectl apply -f $MANIFEST_DIR/stag -n $NAMESPACE
        else
          kubectl apply -f $MANIFEST_DIR/dev -n $NAMESPACE
        fi
        kubectl patch deployment $DEPLOYMENT_NAME -n $NAMESPACE --patch '{"spec": {"template": {"spec": {"containers": [{"name": "${{ env.CONTAINER_NAME }}","env": [{"name": "SENTRY_DSN", "value": "${{ secrets.SENTRY_DSN }}"},{"name": "RELEASE_NUMBER", "value": "${{ github.run_number  }}"},{"name": "ENVIRONMENT", "value": "${{ github.event.inputs.environment }}"}],"image": "${{ secrets.DOCKER_REGISTRY_URL }}/${{ env.ARTIFACT_NAME }}:${{ env.PROMOTE_VERSION }}"}]}}}}'
        kubectl annotate deployment/$DEPLOYMENT_NAME kubernetes.io/change-cause=github-promote-to-version-${{ env.PROMOTE_VERSION }} -n $NAMESPACE
    - name: ${{ env.DEPLOYMENT_NAME }} service Post-deployment steps
      run: |
        NAMESPACE=${{ github.event.inputs.environment }}
        kubectl describe deployment/$DEPLOYMENT_NAME -n $NAMESPACE
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n $NAMESPACE
